{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","field","document","querySelector","button","messageStart","messageWin","messageLose","setGame","updateBoard","setNewNumber","hasEmptyCell","found","row","Math","floor","random","cell","gameCell","cells","randomizeNumber","innerText","classList","add","some","updateCell","num","className","toString","remove","looseGame","filterZero","filter","slide","filteredRow","i","length","push","isNextSame","isBelowSame","transpose","map","slideHorizontally","side","newRow","reverse","forEach","rowIndex","cellIndex","addEventListener","contains","e","prevBoard","code"],"mappings":"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","file":"main.ab385a8d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst field = document.querySelector('tbody');\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nbutton.addEventListener('click', () => {\n  score = 0;\n  document.querySelector('.game-score').innerText = score;\n\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n    setGame();\n  } else {\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    setGame();\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  const prevBoard = [...board].toString();\n\n  if (e.code === 'ArrowLeft' || e.code === 'ArrowRight') {\n    slideHorizontally(e.code);\n  }\n\n  if (e.code === 'ArrowUp' || e.code === 'ArrowDown') {\n    transpose();\n    slideHorizontally(e.code);\n    transpose();\n  }\n\n  updateBoard();\n\n  const currentBoard = [...board].toString();\n\n  if (prevBoard !== currentBoard) {\n    setNewNumber();\n  }\n\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  updateBoard();\n  setNewNumber();\n  setNewNumber();\n}\n\nfunction setNewNumber() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const row = Math.floor(Math.random() * rows);\n    const cell = Math.floor(Math.random() * columns);\n\n    if (board[row][cell] === 0) {\n      const gameCell = field.rows[row].cells[cell];\n\n      board[row][cell] = randomizeNumber();\n      gameCell.innerText = board[row][cell];\n      gameCell.classList.add(`field-cell--${board[row][cell]}`);\n\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  return board.some(row => row.some(cell => !cell));\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.className = 'field-cell';\n\n  if (num > 0) {\n    cell.innerText = num.toString();\n    cell.classList.add(`field-cell--${num}`);\n\n    if (num === 2048) {\n      messageWin.classList.remove('hidden');\n    }\n  }\n\n  looseGame();\n}\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let filteredRow = filterZero(row);\n\n  for (let i = 0; i < filteredRow.length - 1; i++) {\n    if (filteredRow[i] === filteredRow[i + 1]) {\n      filteredRow[i] *= 2;\n      filteredRow[i + 1] = 0;\n      score += filteredRow[i];\n    }\n  }\n\n  filteredRow = filterZero(filteredRow);\n\n  while (filteredRow.length < columns) {\n    filteredRow.push(0);\n  }\n\n  return filteredRow;\n}\n\nfunction randomizeNumber() {\n  return Math.random() >= 0.9 ? 4 : 2;\n}\n\nfunction looseGame() {\n  if (hasEmptyCell()) {\n    return;\n  }\n\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns - 1; cell++) {\n      const isNextSame = board[row][cell] === board[row][cell + 1];\n      const isBelowSame = board[cell][row] === board[cell + 1][row];\n\n      if (isNextSame || isBelowSame) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n\nfunction transpose() {\n  board = board[0].map((cell, i) => board.map(row => row[i]));\n}\n\nfunction slideHorizontally(side) {\n  for (let row = 0; row < rows; row++) {\n    let newRow = board[row];\n\n    if (side === 'ArrowLeft' || side === 'ArrowUp') {\n      newRow = slide(newRow);\n    }\n\n    if (side === 'ArrowRight' || side === 'ArrowDown') {\n      newRow.reverse();\n      newRow = slide(newRow);\n      newRow.reverse();\n    }\n\n    board[row] = newRow;\n\n    for (let cell = 0; cell < columns; cell++) {\n      const gameCell = field.rows[row].cells[cell];\n      const num = board[row][cell];\n\n      updateCell(gameCell, num);\n    }\n  }\n}\n\nfunction updateBoard() {\n  board.forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      updateCell(field.rows[rowIndex].cells[cellIndex], cell);\n    });\n  });\n}\n"]}